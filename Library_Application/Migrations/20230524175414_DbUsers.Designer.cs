// <auto-generated />
using System;
using Library_Application.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library_Application.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230524175414_DbUsers")]
    partial class DbUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.4.23259.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library_Application.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorName = "Endru Troelson",
                            BookName = "C# 10.0 Full Course",
                            Price = 3400.0
                        },
                        new
                        {
                            Id = 2,
                            AuthorName = "Endru Troelson",
                            BookName = "Java Full Course",
                            Price = 12.0
                        },
                        new
                        {
                            Id = 3,
                            AuthorName = "Endru Troelson",
                            BookName = "Python",
                            Price = 21.0
                        },
                        new
                        {
                            Id = 4,
                            AuthorName = "Endru Troelson",
                            BookName = "Python Full Course",
                            Price = 555.0
                        },
                        new
                        {
                            Id = 5,
                            AuthorName = "Davit Makaryan",
                            BookName = "Java Script Full Course",
                            Price = 321.0
                        },
                        new
                        {
                            Id = 6,
                            AuthorName = "Gexam Hakobyan",
                            BookName = "C++ Full Course",
                            Price = 890.0
                        },
                        new
                        {
                            Id = 7,
                            AuthorName = "Endru Troelson",
                            BookName = " C",
                            Price = 450.0
                        },
                        new
                        {
                            Id = 8,
                            AuthorName = "Endru Troelson",
                            BookName = "Assembly Full Course",
                            Price = 123.0
                        },
                        new
                        {
                            Id = 9,
                            AuthorName = "Endru Troelson",
                            BookName = "Visual Basic Full Course",
                            Price = 345.0
                        },
                        new
                        {
                            Id = 10,
                            AuthorName = "Endru Troelson",
                            BookName = "F# Full Course",
                            Price = 567.0
                        });
                });

            modelBuilder.Entity("Library_Application.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreName = "Programming"
                        },
                        new
                        {
                            Id = 2,
                            GenreName = "Programming"
                        },
                        new
                        {
                            Id = 3,
                            GenreName = "Programming"
                        },
                        new
                        {
                            Id = 4,
                            GenreName = "Programming"
                        },
                        new
                        {
                            Id = 5,
                            GenreName = "Programming"
                        },
                        new
                        {
                            Id = 6,
                            GenreName = "Programming"
                        },
                        new
                        {
                            Id = 7,
                            GenreName = "Programming"
                        },
                        new
                        {
                            Id = 8,
                            GenreName = "Programming"
                        },
                        new
                        {
                            Id = 9,
                            GenreName = "Programming"
                        },
                        new
                        {
                            Id = 10,
                            GenreName = "Programming"
                        });
                });

            modelBuilder.Entity("Library_Application.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Library_Application.Models.OrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Library_Application.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Library_Application.Models.Book", b =>
                {
                    b.HasOne("Library_Application.Models.Genre", null)
                        .WithMany("Books")
                        .HasForeignKey("GenreId");
                });

            modelBuilder.Entity("Library_Application.Models.OrderDetails", b =>
                {
                    b.HasOne("Library_Application.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Library_Application.Models.Genre", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
